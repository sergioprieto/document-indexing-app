name: Deploy SAM Application

on:
  push:
    branches:
      - "dev"
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests'
        required: true
        default: 'false'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: document-indexing-dev
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::028642482223:role/GithubActionsSAMDeploymentRole
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::028642482223:role/CloudFormationSAMExecutionRole
  TESTING_ARTIFACTS_BUCKET: document-indexer-sam-artifacts
  TESTING_REGION: us-east-1

jobs:
  test:
    if: github.event.inputs.skip_tests != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest discover tests

  build-and-deploy-dev:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - run: sam build --template ${SAM_TEMPLATE} --use-container
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: dev-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Deploy to dev stack
        run: |
          sam deploy --stack-name ${TESTING_STACK_NAME} \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE} \
            --parameter-overrides Environment=dev